/* 
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SaveAccount {
  /// The name of the account
  #[serde(rename = "name")]
  name: String,
  #[serde(rename = "type")]
  _type: ::models::AccountType,
  /// The current balance of the account in milliunits format
  #[serde(rename = "balance")]
  balance: i64
}

impl SaveAccount {
  pub fn new(name: String, _type: ::models::AccountType, balance: i64) -> SaveAccount {
    SaveAccount {
      name: name,
      _type: _type,
      balance: balance
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> SaveAccount {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_type(&mut self, _type: ::models::AccountType) {
    self._type = _type;
  }

  pub fn with_type(mut self, _type: ::models::AccountType) -> SaveAccount {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &::models::AccountType {
    &self._type
  }


  pub fn set_balance(&mut self, balance: i64) {
    self.balance = balance;
  }

  pub fn with_balance(mut self, balance: i64) -> SaveAccount {
    self.balance = balance;
    self
  }

  pub fn balance(&self) -> &i64 {
    &self.balance
  }


}



