/* 
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct BudgetSummaryResponseData {
  #[serde(rename = "budgets")]
  budgets: Vec<::models::BudgetSummary>,
  /// The default budget, if the associated application is configured to support specifying it
  #[serde(rename = "default_budget")]
  default_budget: Option<::models::BudgetSummary>
}

impl BudgetSummaryResponseData {
  pub fn new(budgets: Vec<::models::BudgetSummary>) -> BudgetSummaryResponseData {
    BudgetSummaryResponseData {
      budgets: budgets,
      default_budget: None
    }
  }

  pub fn set_budgets(&mut self, budgets: Vec<::models::BudgetSummary>) {
    self.budgets = budgets;
  }

  pub fn with_budgets(mut self, budgets: Vec<::models::BudgetSummary>) -> BudgetSummaryResponseData {
    self.budgets = budgets;
    self
  }

  pub fn budgets(&self) -> &Vec<::models::BudgetSummary> {
    &self.budgets
  }


  pub fn set_default_budget(&mut self, default_budget: ::models::BudgetSummary) {
    self.default_budget = Some(default_budget);
  }

  pub fn with_default_budget(mut self, default_budget: ::models::BudgetSummary) -> BudgetSummaryResponseData {
    self.default_budget = Some(default_budget);
    self
  }

  pub fn default_budget(&self) -> Option<&::models::BudgetSummary> {
    self.default_budget.as_ref()
  }

  pub fn reset_default_budget(&mut self) {
    self.default_budget = None;
  }

}



